---
layout: page
title: "Build"
comments: true
sharing: true
footer: true
---

If you are a Gnu/Linux user I strongly recommend to install QJson using your
package manager. QJson packages are available for all the major distributions.

OSX users can install QJson using [mac ports](http://www.macports.org) or
[homebrew](http://mxcl.github.com/homebrew/).

QJson source code can be downloaded from its
[Github page](https://github.com/flavio/qjson).

## Requirements
QJson requires:

  - Qt 4.0 or greater
  - cmake 2.6 or greater

Some possible cmake options:

  - `-DCMAKE_BUILD_TYPE=DEBUG`: enables some debug output (other than making
     easier to debug the code)
  - `-DQJSON_BUILD_TESTS=yes` or `-DKDE4_BUILD_TESTS=yes`: builds the unit tests
  - `-DCMAKE_INSTALL_PREFIX=${HOME}/testinstall`: install qjson in a custom directory
  - `-DCMAKE_INCLUDE_PATH=${HOME}/testinstall/include`: include a custom include directory
  - `-DCMAKE_LIBRARY_PATH=${HOME}/testinstall/lib`: include a custom library directory
  - `-DLIB_DESTINATION=lib64`: if you have a 64 bit system with separate
     libraries for 64 bit libraries
  - `-DQJSON_VERBOSE_DEBUG_OUTPUT:BOOL=ON`: more debugging statements are
     generated by the parser. It's useful only if you are trying to fix
     the bison grammar.

## Unix<a name="unix">&nbsp;</a>

For Unix/Linux/Mac:

```
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=_preferred_path_ ..
make
make install
/sbin/ldconfig #if necessary
```

## Windows<a name="windows">&nbsp;</a>

> **Note well:** these instructions can be outdated, I do not have a Windows
> machine and I'm not really into Windows development.
>
> Patches and documentation related to Windows are welcome.
>
> This guide assumes you are using [MinGW](http://www.mingw.org/).

### The CLI way

After having installed both Qt and cmake add the following line at the end of
`qtenv.bat` (it can be found under `C:\Qt\qt_version\bin`):

```
set PATH=%PATH%;C:\path_to_cmake_\bin
```

Open the "Qt Command Prompt", go to the directory containing QJson's sources
and do:

```
mkdir build
cd build
cmake -G "MinGW Makefiles" ..
mingw32-make
mingw32-make install
```

Now you will find `libqjson.dll` under the `build\lib` directory.

### The GUI way

The [Qt Creator IDE](http://qt.digia.com/Product/Developer-Tools/) can handle
cmake-based projects.

In addition to the Qt Windows SDK you have to download and install the Qt Creator IDE.

Then follow these steps:

  1. Start Qt Creator.
  2. Select: File → Open file or project.
  3. Go to the directory containing QJson's sources.
  4. Open the qjson.pro file.
  5. Open the Projects tab and ensure the build directory points to the path
     where qjson source code is located.
  6. Select: Build → Build all.

At the end of the build you will find the .dll file under the lib folder.


## Symbian<a name="symbian">&nbsp;</a>

Let's face the truth: Symbian is a dead platform. I know someone succeeded in
building QJson on Symbian, but he never provided a detailed guide.

I have no experience with Symbian, hence I cannot offer help/support.

As usual patches and documentation  are welcome.


## QMake<a name="qmake">&nbsp;</a>

Sometimes ago I created a bunch of `.pro` files that allowed to build QJson using qmake.
This revealed to be a poor choice, since I had to support two build systems.

Moreover these `.pro` files were being used only by Windows developers who didn't
want to install cmake.

These `.pro` files have been removed from git with commit
[66d10c44dd3b21](https://github.com/flavio/qjson/commit/66d10c44dd3b21d693933f320c32b3c9a175a693).
You can always retrieve them from git history if you miss them; just keep in mind
I won't provide support.

